{
  "_id": "SJi7nFzyg-getting-started",
  "fields": {
    "entries": {
      "values": {
        "en": [
          {
            "title": "Install webdesign.io",
            "content": "Before starting, you need to make sure your system has Node.js version 6 (or upper) installed. If it is not the case, please [install Node.js using this link](https://nodejs.org).\n\n### 1. Install webdesign.io CLI\n-------\nwebdesign.io CLI let you develop websites right on your local machine.\n\nWith the CLI, you can initialize a new site and start workin on it using any text editor. And thanks to webdesign.io built-in web server, you can preview the site with your computer's web browser without even setting up a database.\n\nThe CLI can also deploy sites to any webdesign.io Engine using the `webdesignio deploy` command. Your changes will immediately be reflected on that site without restarting or making any changes to the Engine server app.\n\nTo help you work faster, webdesign.io comes with pre-defined workflows like Pug (former JADE) and it easy to integrate it in your current flow. It also works well with source version control systems like git and svn.\n\n**Install webdesign.io**\n```\nnpm install -g @webdesignio/cli\n```"
          },
          {
            "title": "Create a new site",
            "content": "### 2. Create a new site\n-------\nWe start with creating a first website, using our webdesign.io-boilerplate.\n\n**Initialize a new website**\n```\nwebdesignio init <mywebsite>\n```\n\nFor practical reasons, we will use webdesignio.com as our deployment target but you're absolutely free to use your own Engine on EC2, Digital Ocean, Engine Yard, Linodes, Heroku or your own server. Don't forget, everything is open source here.\n\nIf you don't have an account, it will create one for you.\n\n> **NOTE**: Currently the CLI also creates an account for [surge.sh](https://surge.sh/) since this is our current way to upload to AWS S3.\n\n**Launch the webdesign.io server**\n```\nnpm start\n```\n\nOpen your browser at this address [http://localhost:3000/](http://localhost:3000/), you should see the boilerplate."
          },
          {
            "title": "Deploy and edit contents  online",
            "content": "### 3. Deploy the site\n------\n\nNow we have a working site, we want to see it working online. That's the role of the webdesign.io engine.\n\n**Now, let's deploy our site!**\n```\nwebdesignio deploy\n```\n**That's it! The CLI will show two addresses**\n```\n    > Access the backend here: https://<< mywebsite>>.webdesignio.com\n    > Your website will be published at the following urls:\n    >     - language en: https://showcase-b1aho38ke-en.surge.sh\n```\n\nVisit the website: `https://showcase-b1aho38ke-en.surge.sh`.\n\nEdit the website: `https://<< mywebsite>>.webdesignio.com`.\n\n### 4. Modify the live content of your site!\n--------\n\nGo to your `<< mywebsite>>.webdesignio.com` domain and sign in with the credentials you entered in the CLI.\n\nYou will see the boilerplate page. You can now edit contents by just clicking into it. Press \"Save\" to save and publish the changes.\n\nThat's it!"
          },
          {
            "title": "What next?",
            "content": "In less than 5 minutes, you were able to create a website, deploy it online and edit the contents in the frontend.\n\n**We call that Penguin-Power :-)**\n\n### 5. What next?\n--------\n\nAs a next step, you will figure out how to use your own website or template.\n\nIt is really easy to become productive with webdesign.io. After 15 minutes, you will actually have your own website online and you will edit it.\n\nWhat we will go through:\n- Overview Structure (Where goes what?)\n- Asset Function (How to link to static files like *.css and *.js)\n- Template prerequisites (What does the template need?)\n- Components (How to make contents editable?)\n- InnerHTML vs Contents\n\nWhen you're done, just deploy your changes with the `webdesignio deploy` command!\n"
          },
          {
            "title": "Overview Structure",
            "content": "### 6. Overview Structure\n--------\n\nGetting started with your own design!\n\n> **Notice:** Did you note that there is no backend? That's correct! In webdesign.io your frontend is your backend.\n\nThe boilerplate comes with these folders:\n\n- `data/`     - Contains contents (json files) if you have changed sth. in the frontend.\n- `dist/`       - Containts folders for CMS-output. Don't change anything here.\n- `src/`         - All your HTML files go here!  \n- `static/`   - All static assets (Images, Css, Javascript, ...)\n\n#### HTML Files\n\n- `src/pages/` - Copy all your HTML files here.\n- `src/objects/` - Copy all your HTML files for Objects (e.g. single Blog-Post, single Project) here. [Read more about Objects](link to the card.)\n\n#### Static Files\n\n- `static/` - Copy all your Static files here.\n\nUse the asset-function (explained in the next step) to reference them.\n"
          },
          {
            "title": "Asset Function",
            "content": "### 7. Asset Function\n--------\n\nFiles under `static/` will be served directly unter `/`.\n\nE.g. `static/img/logo.png` will be served under `localhost:3000/img/logo.png` or in live under `https://www.webdesignio.com/img/logo.png`\n\nTo link the assets, use this \n```\n<!-- Include some CSS -->\n<link href=\"{{assets}}/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n<!-- Include some image -->\n<img src=\"{{assets}}/img/tralala.jpg\">\n\n<!-- Include some background-image -->\n<div class=\"mountain-1\" data-stellar-ratio=\"0.8\" style=\"background: url({{assets}}/img/mountain-1.svg) no-repeat center bottom;\"></div>\n\n<!-- Include some JavaScript -->\n<script src=\"{{assets}}/js/vendor/jquery.min.js\"></script>\n```"
          },
          {
            "title": "Template prerequisites",
            "content": "### 8. Template prerequisites\n--------\n\nYou already know, that there is no backend in webdesign.io. We want to keep things simple. Here you get to know the basics to make your template editable.\n\nThere are few prerequisites and changes that you have to make to your website.\n\n#### webdesign.io script\n\nThe most important one is to load the webdesign.io script. This is the basic for all functionlity that we explane later. In the boilerplate this is the `client.js` script that is generated for you.\n\n**Include the client.js**\n```\n<script data-webdesignio-remove=\"data-webdesignio-remove\" src=\"{{assets}}/client.js\"></script>\n```\n\n#### data-webdesignio-remove\n\nContents, that we do not want to include into the website for visitors, we mark with `data-webdesignio-remove=\"data-webdesignio-remove\"` on the tag.\n```\n<script data-webdesignio-remove=\"data-webdesignio-remove\" src=\"{{assets}}/client.js\"></script>\n```\n#### Save\n\nHow to save changes? Just take an button or link on your website and give it the ID `save`.\n\nIn this example we add the save button to the navigation.\n```\n<ul class=\"list-inline\">\n<li><a href=\"/\">Home</a></li>\n<li data-webdesignio-remove=\"data-webdesignio-remove\">\n    <a id=\"save\" href=\"\">SAVE</a>\n</li>\n</ul>\n```\nNotice the `data-webdesignio-remove` which will not render the whole `<li>`-tag for visitors."
          },
          {
            "title": "Components",
            "content": "### 9. Components\n--------\n\nIn webdesign.io you edit contents using Components. This is a key concept. Components for the most important content types are implemented by us and you will find a list here. More details about each component are available in the docu-page for components.\n\nFor some tasks you will need a individual component. For developers it is super easy to creat powerful components (e.g. to add pins to a Google Map).\n\n**You are a designer?** Check the marketplace or partner up with a developer to get the component you need.\n\n**You are a developer?** Check the developer documentation about how to create your own components. \n\n\n#### General infos about Components\n\nYou add a component using plain HTML! Just apply it to the HTML-Tag you need it on.\n\nLet's say,  you want to make a `<h2>`-tag editable.\n```\n<h2 data-component=\"Inplace\" data-props=\"{'name':'howitworks'}\">\n    See How It Works\n</h2>\n```\nEvery component is defined by the name. `data-component=\"Inplace\"` will use the so called `Inplace` component.\n\n`data-probs` handles all the properties a component can take. In this example, the only property needed is the `name`. This is the key, where we will save the contents in the databse after somebody changed and saved the page.\n\n#### Available Components\n\n**Inplace**\nEdit simple text\n\n-----\n##### Inplace\n\nChange text as simple as possible.\n\n**Usage**\n```\n<h2 data-component=\"Inplace\" data-props=\"{'name':'howitworks'}\">\n    See How It Works\n</h2>\n```\n**Features**\n\nIt is not possible to make line breaks or to manipulate the style of the element.\n\nAll HTML inside will be stripped.\n\nInnerHTML is taken if there is no content yet."
          },
          {
            "title": "InnerHTML vs. Contents",
            "content": "### 10. InnerHTML vs. Contents\n--------\n\nIn webdesign.io there are two kind of contents which comes in super handy. \n\nWhile implementing webdesign.io to your website you wrote sth like:\n```\n<h2 data-component=\"Inplace\" data-props=\"{'name':'howitworks'}\">\n    See How It Works\n</h2>\n```\n\n\"See How It Works\" is called `InnterHtml`. Once you clicked on the elemens with the ID \"save\", we will save this content to the database. Now we call it `content`. Your customer will do this every time when he saves changes.\n\nTo sync the contents between you local machine and the online-version, there are two super handy commands:\n\n`webdesignio pull` will pull all contents from the live website. So you will work on the same contents as your customer!\n\n`webdesignio push` will push all your local contents to the live website.\n\n<br>\n\n> **Best practice**: You got a website with 'Lorem Ipsum'. The contents will be created by a copy writer? Just bring the website online on a temporary domain and ask him to change the contents. Later pull the changes.\n\n<br>\n\n> **Best practice**:  Working in a distributed team and multiple people are working on contents? Check the `data/` folder into your version controll system. Push and pull and create the contents with high-speed."
          },
          {
            "title": "Going Further ",
            "content": "### 11. Going Further \n--------\n\nIn super short time you were able to create your own website from scratch. Liked it? Let us know!\n\nCheck out the other docs to go more into details. Here are some links to imporant features:\n\n**Workflows**\n\nThere are different workflows. You can implement your own or check out a predefined one. My favourite is the \"PUG-Workflow\".\n\n**Objects**\n\nElements like a portfolio or like references require to add many pages of the same type. This is what we call `Objects`.\n\n**Global elements**\n\nSometimes you want to have the same content on multiple pages (e.g. the address in the footer). This is what we call global data.\n\n**Multi-language**\n\nYou need more than one language? This is super easy! Check it out.\n\n**Create Components**\n\nCreate your own components. The opportunities are endless.\n\n"
          }
        ]
      }
    },
    "title": {
      "values": {
        "en": "Getting started"
      }
    },
    "subtitle": {
      "values": {
        "en": "Create a your first site in 5 minutes"
      }
    }
  },
  "type": "docs",
  "website": "webdesignio"
}