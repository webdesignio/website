#!/bin/bash

trap 'rm -r components/tmp; rm components/__*__.tmp.js' EXIT
echo "Starting build" > wdio.log
echo "  Transpiling component files"
babel --out-dir components/tmp --presets react -- src/components 2>&1 >>wdio.log

for component in src/components/*.jsx; do
  component_name=$(basename $component .jsx)
  echo "  Building $component_name"
  cat > components/__${component_name}__.tmp.js <<EOF
import ReactDOM from 'react-dom/server'
import $component_name from './tmp/$component_name'
module.exports.renderToString = function renderToString (props) {
  return ReactDOM.renderToStaticMarkup(
    React.createElement($component_name, props)
  )
}
EOF
  browserify \
    -o components/__${component_name}_m__.tmp.js \
    -t rollupify \
    -s ${component_name} \
    components/__${component_name}__.tmp.js 2>> wdio.log
  scripts/minify components/__${component_name}_m__.tmp.js \
    > components/${component_name}.js
done

echo "  Generating component index"
scripts/create_component_index
echo "  Building client"
browserify \
  -t [ babelify --presets [ react es2015 ] ] \
  -o client.js \
  src/client.js 2>&1 >> wdio.log
echo "  Building pages"
pug -o pages src/pages
echo "  Building objects"
pug -o objects src/objects
echo
